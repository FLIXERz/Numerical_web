{"ast":null,"code":"import * as math from 'mathjs';\nconst i_arr = [];\nconst a_arr = [];\nconst root_arr = [];\nexport default function Onepoint(x, eq) {\n  let EPSILON = 0.0000001;\n  function func(x) {\n    const node2 = math.parse(eq);\n    const code2 = node2.compile();\n    let scope = {\n      x\n    };\n    return code2.evaluate(scope);\n  }\n  function derivFunc(x) {\n    const node1 = math.parse(eq);\n    const code2 = math.derivative(node1, 'x');\n    const code3 = code2.compile();\n    let scope = {\n      x\n    };\n    return code3.evaluate(scope);\n  }\n  let ix = 0;\n  let h = func(x) / derivFunc(x);\n  while (Math.abs(h) >= EPSILON) {\n    a_arr.push(x);\n    h = func(x) / derivFunc(x);\n    x = x - h;\n    ix++;\n    i_arr.push(ix);\n    root_arr.push(x);\n  }\n  return x;\n}\nexport function DataTableonenew(x) {\n  const data = [];\n  const datax = [];\n  for (let i = 0; i < i_arr.length; i++) {\n    datax.push({\n      iter: i_arr[i],\n      x0: a_arr[i],\n      xm: root_arr[i]\n    });\n  }\n  for (let i = 0; i < i_arr.length; i++) {\n    data.push(datax[i]);\n  }\n  if (x === 1) {\n    // Clear the existing data\n    data.length = 0;\n    datax.length = 0;\n    i_arr.length = 0;\n    a_arr.length = 0;\n    // b_arr.length = 0 ;\n    root_arr.length = 0;\n  }\n  return data;\n}\n// // Initial values assumed\n// let x0 = -20;\n// newtonRaphson(x0);","map":{"version":3,"names":["math","i_arr","a_arr","root_arr","Onepoint","x","eq","EPSILON","func","node2","parse","code2","compile","scope","evaluate","derivFunc","node1","derivative","code3","ix","h","Math","abs","push","DataTableonenew","data","datax","i","length","iter","x0","xm"],"sources":["C:/Users/Azul/homework/Numerical/PJ/src/Components/TestOnepoint.js"],"sourcesContent":["import * as math from 'mathjs';\r\n\r\nconst i_arr =[]\r\nconst a_arr = []\r\nconst root_arr = [] \r\n\r\nexport default function Onepoint(x,eq){\r\n    \r\n\tlet EPSILON = 0.0000001;\r\n\t\r\n\tfunction func(x)\r\n\t{\r\n\t\t    const node2 = math.parse(eq);\r\n            const code2 = node2.compile();\r\n            let scope = {x} ;\r\n            return  code2.evaluate(scope);\r\n\t}\r\n\t\r\n\tfunction derivFunc(x)\r\n\t{   \r\n        const node1 = math.parse(eq);\r\n        const code2 =  math.derivative(node1, 'x');\r\n        const code3 = code2.compile();\r\n        let scope={x};\r\n        return code3.evaluate(scope);\r\n\t\t\r\n\t}\r\n        let ix = 0;\r\n\t\tlet h = func(x) / derivFunc(x);\r\n\t\twhile (Math.abs(h) >= EPSILON)\r\n\t\t{\r\n            a_arr.push(x)\r\n\t\t\th = func(x) / derivFunc(x);\r\n\t\t\tx = x - h;\r\n            ix++\r\n            i_arr.push(ix)\r\n            root_arr.push(x)\r\n\r\n\t\t}\r\n\r\n      return x ;\r\n  }\r\n  export function DataTableonenew(x){\r\n    const data =[]\r\n    const datax =[]\r\n    for (let i = 0; i < i_arr.length; i++) {\r\n        datax.push({iter:i_arr[i],x0:a_arr[i],xm:root_arr[i]});\r\n      }\r\n    for (let i = 0; i < i_arr.length; i++) {\r\n        data.push(datax[i])\r\n    }\r\n\r\n    if(x === 1){\r\n        // Clear the existing data\r\n        data.length = 0;\r\n        datax.length = 0;\r\n        i_arr.length = 0;\r\n        a_arr.length = 0;\r\n        // b_arr.length = 0 ;\r\n        root_arr.length = 0;\r\n    }\r\n\r\n   return data;\r\n}\t\r\n// // Initial values assumed\r\n\t\t// let x0 = -20;\r\n\t\t// newtonRaphson(x0);"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,QAAQ;AAE9B,MAAMC,KAAK,GAAE,EAAE;AACf,MAAMC,KAAK,GAAG,EAAE;AAChB,MAAMC,QAAQ,GAAG,EAAE;AAEnB,eAAe,SAASC,QAAQA,CAACC,CAAC,EAACC,EAAE,EAAC;EAErC,IAAIC,OAAO,GAAG,SAAS;EAEvB,SAASC,IAAIA,CAACH,CAAC,EACf;IACK,MAAMI,KAAK,GAAGT,IAAI,CAACU,KAAK,CAACJ,EAAE,CAAC;IACtB,MAAMK,KAAK,GAAGF,KAAK,CAACG,OAAO,CAAC,CAAC;IAC7B,IAAIC,KAAK,GAAG;MAACR;IAAC,CAAC;IACf,OAAQM,KAAK,CAACG,QAAQ,CAACD,KAAK,CAAC;EACxC;EAEA,SAASE,SAASA,CAACV,CAAC,EACpB;IACO,MAAMW,KAAK,GAAGhB,IAAI,CAACU,KAAK,CAACJ,EAAE,CAAC;IAC5B,MAAMK,KAAK,GAAIX,IAAI,CAACiB,UAAU,CAACD,KAAK,EAAE,GAAG,CAAC;IAC1C,MAAME,KAAK,GAAGP,KAAK,CAACC,OAAO,CAAC,CAAC;IAC7B,IAAIC,KAAK,GAAC;MAACR;IAAC,CAAC;IACb,OAAOa,KAAK,CAACJ,QAAQ,CAACD,KAAK,CAAC;EAEnC;EACO,IAAIM,EAAE,GAAG,CAAC;EAChB,IAAIC,CAAC,GAAGZ,IAAI,CAACH,CAAC,CAAC,GAAGU,SAAS,CAACV,CAAC,CAAC;EAC9B,OAAOgB,IAAI,CAACC,GAAG,CAACF,CAAC,CAAC,IAAIb,OAAO,EAC7B;IACUL,KAAK,CAACqB,IAAI,CAAClB,CAAC,CAAC;IACtBe,CAAC,GAAGZ,IAAI,CAACH,CAAC,CAAC,GAAGU,SAAS,CAACV,CAAC,CAAC;IAC1BA,CAAC,GAAGA,CAAC,GAAGe,CAAC;IACAD,EAAE,EAAE;IACJlB,KAAK,CAACsB,IAAI,CAACJ,EAAE,CAAC;IACdhB,QAAQ,CAACoB,IAAI,CAAClB,CAAC,CAAC;EAE1B;EAEI,OAAOA,CAAC;AACZ;AACA,OAAO,SAASmB,eAAeA,CAACnB,CAAC,EAAC;EAChC,MAAMoB,IAAI,GAAE,EAAE;EACd,MAAMC,KAAK,GAAE,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,KAAK,CAAC2B,MAAM,EAAED,CAAC,EAAE,EAAE;IACnCD,KAAK,CAACH,IAAI,CAAC;MAACM,IAAI,EAAC5B,KAAK,CAAC0B,CAAC,CAAC;MAACG,EAAE,EAAC5B,KAAK,CAACyB,CAAC,CAAC;MAACI,EAAE,EAAC5B,QAAQ,CAACwB,CAAC;IAAC,CAAC,CAAC;EACxD;EACF,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1B,KAAK,CAAC2B,MAAM,EAAED,CAAC,EAAE,EAAE;IACnCF,IAAI,CAACF,IAAI,CAACG,KAAK,CAACC,CAAC,CAAC,CAAC;EACvB;EAEA,IAAGtB,CAAC,KAAK,CAAC,EAAC;IACP;IACAoB,IAAI,CAACG,MAAM,GAAG,CAAC;IACfF,KAAK,CAACE,MAAM,GAAG,CAAC;IAChB3B,KAAK,CAAC2B,MAAM,GAAG,CAAC;IAChB1B,KAAK,CAAC0B,MAAM,GAAG,CAAC;IAChB;IACAzB,QAAQ,CAACyB,MAAM,GAAG,CAAC;EACvB;EAED,OAAOH,IAAI;AACd;AACA;AACE;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}