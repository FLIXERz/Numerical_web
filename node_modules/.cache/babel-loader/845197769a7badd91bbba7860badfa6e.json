{"ast":null,"code":"export function gaussianElimination(mat, N) {\n  let singular_flag = forwardElim(mat, N);\n  if (singular_flag != -1) {\n    if (mat[singular_flag][N]) {\n      console.log(\"Inconsistent System.\");\n    } else {\n      console.log(\"May have infinitely many solutions.\");\n    }\n  }\n  return backSub(mat, N);\n}\nexport function swap_row(mat, i, j, N) {\n  for (let k = 0; k <= N; k++) {\n    let temp = mat[i][k];\n    mat[i][k] = mat[j][k];\n    mat[j][k] = temp;\n  }\n}\nexport function forwardElim(mat, N) {\n  for (let k = 0; k < N; k++) {\n    let i_max = k;\n    let v_max = mat[i_max][k];\n    for (let i = k + 1; i < N; i++) {\n      if (Math.abs(mat[i][k]) > v_max) {\n        v_max = mat[i][k];\n        i_max = i;\n      }\n    }\n    if (!mat[k][i_max]) {\n      return k; // Matrix is singular\n    }\n    if (i_max != k) {\n      swap_row(mat, k, i_max);\n    }\n    for (let i = k + 1; i < N; i++) {\n      let f = mat[i][k] / mat[k][k];\n      for (var j = k + 1; j <= N; j++) {\n        mat[i][j] -= mat[k][j] * f;\n        mat[i][k] = 0;\n      }\n    }\n  }\n  return -1;\n}\nexport function backSub(mat, N) {\n  let x = new Array(N);\n  for (let i = N - 1; i >= 0; i--) {\n    x[i] = mat[i][N];\n    for (let j = i + 1; j < N; j++) {\n      x[i] -= mat[i][j] * x[j];\n    }\n    x[i] = Math.round(x[i] / mat[i][i]);\n  }\n  let arr = [];\n  for (let i = 0; i < N; i++) {\n    arr.push(x[i]);\n  }\n  console.log(arr);\n  return arr;\n}\n\n// Driver program\n\n/* input matrix */\n// let mat =   [[3.0, 2.0,-4.0, 3.0],\n//              [2.0, 3.0, 3.0, 15.0],\n//              [5.0, -3, 1.0, 14.0]];\n\n// gaussianElimination(mat);\n\n// This code is contributed by phasing17","map":{"version":3,"names":["gaussianElimination","mat","N","singular_flag","forwardElim","console","log","backSub","swap_row","i","j","k","temp","i_max","v_max","Math","abs","f","x","Array","round","arr","push"],"sources":["C:/Users/Azul/homework/Numerical/PJ/src/Components_Linear/Test_GaussianEM.js"],"sourcesContent":["\r\nexport function gaussianElimination(mat,N)\r\n{   \r\n    \r\n    let singular_flag = forwardElim(mat,N);\r\n \r\n    if (singular_flag != -1)\r\n    {\r\n        if (mat[singular_flag][N]){\r\n            console.log(\"Inconsistent System.\");\r\n        }\r\n        else{\r\n             console.log(\"May have infinitely many solutions.\");\r\n        }\r\n    }\r\n  \r\n    return backSub(mat,N)\r\n}\r\n\r\nexport function swap_row(mat, i, j,N)\r\n{\r\n    for (let k=0; k<=N; k++)\r\n    {\r\n        let temp = mat[i][k];\r\n        mat[i][k] = mat[j][k];\r\n        mat[j][k] = temp;\r\n    }\r\n}\r\n\r\nexport function forwardElim(mat,N)\r\n{\r\n    for (let k=0; k<N; k++)\r\n    {\r\n        let i_max = k;\r\n        let v_max = mat[i_max][k];\r\n\r\n        for (let i = k+1; i < N; i++){\r\n            if (Math.abs(mat[i][k]) > v_max){\r\n                v_max = mat[i][k]\r\n                i_max = i;\r\n            }\r\n                \r\n        }\r\n \r\n        if (!mat[k][i_max]){\r\n            return k; // Matrix is singular\r\n        }\r\n\r\n        if (i_max != k){\r\n            swap_row(mat, k, i_max);\r\n        }\r\n        \r\n        for (let i=k+1; i<N; i++)\r\n        {\r\n    \r\n            let f = mat[i][k]/mat[k][k];\r\n \r\n            for (var j=k+1; j<=N; j++){ \r\n                mat[i][j] -= mat[k][j]*f;\r\n                mat[i][k] = 0;\r\n        }\r\n               \r\n        }\r\n    }\r\n    return -1 ;\r\n}\r\n\r\nexport function backSub(mat,N)\r\n{\r\n    let x = new Array(N);  \r\n \r\n    \r\n    for (let i = N-1; i >= 0; i--)\r\n    {\r\n      \r\n        x[i] = mat[i][N];\r\n \r\n        \r\n        for (let j=i+1; j<N; j++)\r\n        {\r\n            x[i] -= mat[i][j]*x[j];\r\n        }\r\n \r\n        \r\n        x[i] = Math.round(x[i]/mat[i][i]);\r\n    }\r\n    \r\n    let arr =[]\r\n    for (let i=0; i<N; i++){\r\n        arr.push(x[i]);\r\n    }\r\n        console.log(arr)\r\n    \r\n    return arr ;\r\n        \r\n}\r\n \r\n// Driver program\r\n \r\n/* input matrix */\r\n// let mat =   [[3.0, 2.0,-4.0, 3.0],\r\n//              [2.0, 3.0, 3.0, 15.0],\r\n//              [5.0, -3, 1.0, 14.0]];\r\n \r\n// gaussianElimination(mat);\r\n \r\n \r\n// This code is contributed by phasing17"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}