{"ast":null,"code":"export function fx(y0, y1, x0, x1) {\n  let fx = (y1 - y0) / (x1 - x0);\n  return fx;\n}\nexport function findvalue(x, y, value) {\n  //#############round1##################\n  let b2 = fx(y[0], y[1], x[0], x[1]); //teram1\n  let term2 = fx(y[1], y[2], x[1], x[2]);\n  let term3 = fx(y[2], y[3], x[2], x[3]);\n  //############round2###################\n  let b3 = (term2 - b2) / (x[2] - x[0]);\n  let term4 = (term3 - term2) / (x[3] - x[1]);\n  //###########round3#################\n  let b4 = (term4 - b3) / (x[3] - x[1]);\n  let arr = [b2, term2, term3, b3, term4, b4];\n  return arr;\n}\n// \n// +\n// +\n// let term1 = (y[1]-y[0]/x[1]-x[0]);\n\n//   let term2 = (y[2]-y[1]/x[2]-x[1]);\n//   let term3 =(y[3]-y[2]/x[3]-x[2]);\n//   let term4 = (term2-term1/x[2]-x[0]);\n//   let term5 = (term3-term2/x[3]-x[1]);\n//   let term6 = (term5 -term4/x[3]-x[0]);\n\n//   let fxz =(y[0] + term1*(value-x[0]) + term4*(x-x[0])*(x-x[1]));\n\n//   let arr = [term1,term2,term3,term4,term5,term6,fxz];","map":{"version":3,"names":["fx","y0","y1","x0","x1","findvalue","x","y","value","b2","term2","term3","b3","term4","b4","arr"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Interpolation/TestNewton.js"],"sourcesContent":["export function fx(y0,y1,x0,x1){\r\n  let fx = (y1-y0)/(x1-x0) ;\r\n  return fx ;\r\n}\r\n\r\nexport function findvalue(x,y,value){\r\n  \r\n  \r\n  //#############round1##################\r\n  let b2 = fx(y[0],y[1],x[0],x[1]);//teram1\r\n  let term2 = fx(y[1],y[2],x[1],x[2]);\r\n  let term3 = fx(y[2],y[3],x[2],x[3]);\r\n  //############round2###################\r\n  let b3 =(term2-b2)/(x[2]-x[0]);\r\n  let term4 =(term3-term2)/(x[3]-x[1]);\r\n  //###########round3#################\r\n  let b4 =(term4-b3)/(x[3]-x[1]);\r\n\r\n  \r\n  \r\n  let arr = [b2,term2,term3,b3,term4,b4];\r\n\r\n  return (arr) ;\r\n}\r\n// \r\n// +\r\n// +\r\n// let term1 = (y[1]-y[0]/x[1]-x[0]);\r\n  \r\n//   let term2 = (y[2]-y[1]/x[2]-x[1]);\r\n//   let term3 =(y[3]-y[2]/x[3]-x[2]);\r\n//   let term4 = (term2-term1/x[2]-x[0]);\r\n//   let term5 = (term3-term2/x[3]-x[1]);\r\n//   let term6 = (term5 -term4/x[3]-x[0]);\r\n\r\n//   let fxz =(y[0] + term1*(value-x[0]) + term4*(x-x[0])*(x-x[1]));\r\n\r\n//   let arr = [term1,term2,term3,term4,term5,term6,fxz];"],"mappings":"AAAA,OAAO,SAASA,EAAEA,CAACC,EAAE,EAACC,EAAE,EAACC,EAAE,EAACC,EAAE,EAAC;EAC7B,IAAIJ,EAAE,GAAG,CAACE,EAAE,GAACD,EAAE,KAAGG,EAAE,GAACD,EAAE,CAAC;EACxB,OAAOH,EAAE;AACX;AAEA,OAAO,SAASK,SAASA,CAACC,CAAC,EAACC,CAAC,EAACC,KAAK,EAAC;EAGlC;EACA,IAAIC,EAAE,GAAGT,EAAE,CAACO,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,EAACD,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,IAAII,KAAK,GAAGV,EAAE,CAACO,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,EAACD,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,CAAC;EACnC,IAAIK,KAAK,GAAGX,EAAE,CAACO,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,EAACD,CAAC,CAAC,CAAC,CAAC,EAACA,CAAC,CAAC,CAAC,CAAC,CAAC;EACnC;EACA,IAAIM,EAAE,GAAE,CAACF,KAAK,GAACD,EAAE,KAAGH,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,IAAIO,KAAK,GAAE,CAACF,KAAK,GAACD,KAAK,KAAGJ,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC;EACA,IAAIQ,EAAE,GAAE,CAACD,KAAK,GAACD,EAAE,KAAGN,CAAC,CAAC,CAAC,CAAC,GAACA,CAAC,CAAC,CAAC,CAAC,CAAC;EAI9B,IAAIS,GAAG,GAAG,CAACN,EAAE,EAACC,KAAK,EAACC,KAAK,EAACC,EAAE,EAACC,KAAK,EAACC,EAAE,CAAC;EAEtC,OAAQC,GAAG;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}