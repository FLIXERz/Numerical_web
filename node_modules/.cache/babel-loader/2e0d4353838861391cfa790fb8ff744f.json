{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azul\\\\homework\\\\Numerical\\\\1\\\\PJ\\\\src\\\\Components_Linear\\\\Form_CholeskyDecomposition.js\";\nimport React, { useState } from 'react';\nfunction Form_CholeskyDecomposition() {\n  const [matrix, setMatrix] = useState([[0, 0], [0, 0]]);\n  const handleMatrixChange = (row, col, value) => {\n    const newMatrix = [...matrix];\n    newMatrix[row][col] = parseFloat(value);\n    setMatrix(newMatrix);\n  };\n  const calculateCholesky = () => {\n    // ใส่ logic การคำนวณ Cholesky Decomposition ที่นี่\n    console.log(\"Calculating Cholesky Decomposition for matrix: \", matrix);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Cholesky Decomposition\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, matrix.map((row, rowIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, row.map((value, colIndex) => /*#__PURE__*/React.createElement(\"input\", {\n    key: colIndex,\n    type: \"number\",\n    value: value,\n    onChange: e => handleMatrixChange(rowIndex, colIndex, e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: calculateCholesky,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Calculate Cholesky\"));\n}\nexport default Form_CholeskyDecomposition;","map":{"version":3,"names":["React","useState","Form_CholeskyDecomposition","matrix","setMatrix","handleMatrixChange","row","col","value","newMatrix","parseFloat","calculateCholesky","console","log","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIndex","key","colIndex","type","onChange","e","target","onClick"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components_Linear/Form_CholeskyDecomposition.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Form_CholeskyDecomposition() {\r\n    const [matrix, setMatrix] = useState([[0, 0], [0, 0]]);\r\n\r\n    const handleMatrixChange = (row, col, value) => {\r\n        const newMatrix = [...matrix];\r\n        newMatrix[row][col] = parseFloat(value);\r\n        setMatrix(newMatrix);\r\n    };\r\n\r\n    const calculateCholesky = () => {\r\n        // ใส่ logic การคำนวณ Cholesky Decomposition ที่นี่\r\n        console.log(\"Calculating Cholesky Decomposition for matrix: \", matrix);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Cholesky Decomposition</h2>\r\n            <div>\r\n                {matrix.map((row, rowIndex) => (\r\n                    <div key={rowIndex}>\r\n                        {row.map((value, colIndex) => (\r\n                            <input\r\n                                key={colIndex}\r\n                                type=\"number\"\r\n                                value={value}\r\n                                onChange={(e) => handleMatrixChange(rowIndex, colIndex, e.target.value)}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <button onClick={calculateCholesky}>Calculate Cholesky</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form_CholeskyDecomposition;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,0BAA0BA,CAAA,EAAG;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMI,kBAAkB,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAK;IAC5C,MAAMC,SAAS,GAAG,CAAC,GAAGN,MAAM,CAAC;IAC7BM,SAAS,CAACH,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGG,UAAU,CAACF,KAAK,CAAC;IACvCJ,SAAS,CAACK,SAAS,CAAC;EACxB,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACAC,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEV,MAAM,CAAC;EAC1E,CAAC;EAED,oBACIH,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,wBAA0B,CAAC,eAC/BpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKjB,MAAM,CAACkB,GAAG,CAAC,CAACf,GAAG,EAAEgB,QAAQ,kBACtBtB,KAAA,CAAAc,aAAA;IAAKS,GAAG,EAAED,QAAS;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACdd,GAAG,CAACe,GAAG,CAAC,CAACb,KAAK,EAAEgB,QAAQ,kBACrBxB,KAAA,CAAAc,aAAA;IACIS,GAAG,EAAEC,QAAS;IACdC,IAAI,EAAC,QAAQ;IACbjB,KAAK,EAAEA,KAAM;IACbkB,QAAQ,EAAGC,CAAC,IAAKtB,kBAAkB,CAACiB,QAAQ,EAAEE,QAAQ,EAAEG,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3E,CACJ,CACA,CACR,CACA,CAAC,eACNpB,KAAA,CAAAc,aAAA;IAAQe,OAAO,EAAElB,iBAAkB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oBAA0B,CAC7D,CAAC;AAEd;AAEA,eAAelB,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module"}