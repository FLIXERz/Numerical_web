{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azul\\\\homework\\\\Numerical\\\\1\\\\PJ\\\\src\\\\Components_Inter\\\\Form_SplineInterpolation.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default function Form_SplineInterpolation() {\n  const [points, setPoints] = useState([{\n    x: 0,\n    y: 0\n  }]);\n  const [value, setValue] = useState(0);\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\n  const handlePointChange = (index, axis, val) => {\n    const newPoints = [...points];\n    newPoints[index][axis] = parseFloat(val);\n    setPoints(newPoints);\n  };\n  const addPoint = () => {\n    setPoints([...points, {\n      x: 0,\n      y: 0\n    }]);\n  };\n  const calculateCubicSpline = () => {\n    const n = points.length - 1;\n    let h = Array(n).fill(0);\n    let alpha = Array(n).fill(0);\n    let l = Array(n + 1).fill(0);\n    let mu = Array(n).fill(0);\n    let z = Array(n + 1).fill(0);\n    let c = Array(n + 1).fill(0);\n    let b = Array(n).fill(0);\n    let d = Array(n).fill(0);\n    let a = points.map(point => point.y);\n    for (let i = 0; i < n; i++) {\n      h[i] = points[i + 1].x - points[i].x;\n      alpha[i] = 3 / h[i] * (points[i + 1].y - points[i].y) - 3 / h[i - 1] * (points[i].y - points[i - 1].y);\n    }\n    l[0] = 1;\n    mu[0] = 0;\n    z[0] = 0;\n    for (let i = 1; i < n; i++) {\n      l[i] = 2 * (points[i + 1].x - points[i - 1].x) - h[i - 1] * mu[i - 1];\n      mu[i] = h[i] / l[i];\n      z[i] = (alpha[i] - h[i - 1] * z[i - 1]) / l[i];\n    }\n    l[n] = 1;\n    z[n] = 0;\n    c[n] = 0;\n    for (let j = n - 1; j >= 0; j--) {\n      c[j] = z[j] - mu[j] * c[j + 1];\n      b[j] = (points[j + 1].y - points[j].y) / h[j] - h[j] * (c[j + 1] + 2 * c[j]) / 3;\n      d[j] = (c[j + 1] - c[j]) / (3 * h[j]);\n    }\n    const findSplineValue = x => {\n      for (let i = 0; i < n; i++) {\n        if (x >= points[i].x && x <= points[i + 1].x) {\n          let deltaX = x - points[i].x;\n          return a[i] + b[i] * deltaX + c[i] * deltaX ** 2 + d[i] * deltaX ** 3;\n        }\n      }\n      return null;\n    };\n    setInterpolatedValue(findSplineValue(value));\n  };\n  const chartData = points.map(point => ({\n    x: point.x,\n    y: point.y\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Cubic Spline Interpolation\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Input Points\"), points.map((point, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"x\",\n    value: point.x,\n    onChange: e => handlePointChange(index, 'x', e.target.value),\n    style: {\n      width: 60,\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"y\",\n    value: point.y,\n    onChange: e => handlePointChange(index, 'y', e.target.value),\n    style: {\n      width: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: addPoint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Add Point\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Value to Interpolate\",\n    value: value,\n    onChange: e => setValue(parseFloat(e.target.value)),\n    style: {\n      width: 160\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mt-3\",\n    onClick: calculateCubicSpline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Calculate\"), interpolatedValue !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Interpolated Value at \", value, \": \", interpolatedValue.toFixed(4))), /*#__PURE__*/React.createElement(LineChart, {\n    width: 450,\n    height: 300,\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"y\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Form_SplineInterpolation","points","setPoints","x","y","value","setValue","interpolatedValue","setInterpolatedValue","handlePointChange","index","axis","val","newPoints","parseFloat","addPoint","calculateCubicSpline","n","length","h","Array","fill","alpha","l","mu","z","c","b","d","a","map","point","i","j","findSplineValue","deltaX","chartData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","style","marginBottom","type","placeholder","onChange","e","target","width","marginRight","onClick","toFixed","height","data","strokeDasharray","dataKey","stroke","activeDot","r"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components_Inter/Form_SplineInterpolation.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nexport default function Form_SplineInterpolation() {\r\n  const [points, setPoints] = useState([{ x: 0, y: 0 }]);\r\n  const [value, setValue] = useState(0);\r\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\r\n\r\n  const handlePointChange = (index, axis, val) => {\r\n    const newPoints = [...points];\r\n    newPoints[index][axis] = parseFloat(val);\r\n    setPoints(newPoints);\r\n  };\r\n\r\n  const addPoint = () => {\r\n    setPoints([...points, { x: 0, y: 0 }]);\r\n  };\r\n\r\n  const calculateCubicSpline = () => {\r\n    const n = points.length - 1;\r\n    let h = Array(n).fill(0);\r\n    let alpha = Array(n).fill(0);\r\n    let l = Array(n + 1).fill(0);\r\n    let mu = Array(n).fill(0);\r\n    let z = Array(n + 1).fill(0);\r\n    let c = Array(n + 1).fill(0);\r\n    let b = Array(n).fill(0);\r\n    let d = Array(n).fill(0);\r\n    let a = points.map(point => point.y);\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      h[i] = points[i + 1].x - points[i].x;\r\n      alpha[i] = (3 / h[i]) * (points[i + 1].y - points[i].y) - (3 / h[i - 1]) * (points[i].y - points[i - 1].y);\r\n    }\r\n\r\n    l[0] = 1;\r\n    mu[0] = 0;\r\n    z[0] = 0;\r\n\r\n    for (let i = 1; i < n; i++) {\r\n      l[i] = 2 * (points[i + 1].x - points[i - 1].x) - h[i - 1] * mu[i - 1];\r\n      mu[i] = h[i] / l[i];\r\n      z[i] = (alpha[i] - h[i - 1] * z[i - 1]) / l[i];\r\n    }\r\n\r\n    l[n] = 1;\r\n    z[n] = 0;\r\n    c[n] = 0;\r\n\r\n    for (let j = n - 1; j >= 0; j--) {\r\n      c[j] = z[j] - mu[j] * c[j + 1];\r\n      b[j] = (points[j + 1].y - points[j].y) / h[j] - h[j] * (c[j + 1] + 2 * c[j]) / 3;\r\n      d[j] = (c[j + 1] - c[j]) / (3 * h[j]);\r\n    }\r\n\r\n    const findSplineValue = (x) => {\r\n      for (let i = 0; i < n; i++) {\r\n        if (x >= points[i].x && x <= points[i + 1].x) {\r\n          let deltaX = x - points[i].x;\r\n          return a[i] + b[i] * deltaX + c[i] * deltaX ** 2 + d[i] * deltaX ** 3;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    setInterpolatedValue(findSplineValue(value));\r\n  };\r\n\r\n  const chartData = points.map((point) => ({ x: point.x, y: point.y }));\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <center>\r\n        <h2>Cubic Spline Interpolation</h2>\r\n\r\n        <h3>Input Points</h3>\r\n        {points.map((point, index) => (\r\n          <div key={index} style={{ marginBottom: 10 }}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"x\"\r\n              value={point.x}\r\n              onChange={(e) => handlePointChange(index, 'x', e.target.value)}\r\n              style={{ width: 60, marginRight: 5 }}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"y\"\r\n              value={point.y}\r\n              onChange={(e) => handlePointChange(index, 'y', e.target.value)}\r\n              style={{ width: 60 }}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button className=\"btn btn-secondary\" onClick={addPoint}>\r\n          Add Point\r\n        </button>\r\n\r\n        <div className=\"mt-3\">\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Value to Interpolate\"\r\n            value={value}\r\n            onChange={(e) => setValue(parseFloat(e.target.value))}\r\n            style={{ width: 160 }}\r\n          />\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary mt-3\" onClick={calculateCubicSpline}>\r\n          Calculate\r\n        </button>\r\n\r\n        {interpolatedValue !== null && (\r\n          <div className=\"mt-4\">\r\n            <h4>Interpolated Value at {value}: {interpolatedValue.toFixed(4)}</h4>\r\n          </div>\r\n        )}\r\n\r\n        <LineChart width={450} height={300} data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        </LineChart>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAO,sCAAsC;AAC7C,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAExF,eAAe,SAASC,wBAAwBA,CAAA,EAAG;EACjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC;IAAEW,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMiB,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEC,GAAG,KAAK;IAC9C,MAAMC,SAAS,GAAG,CAAC,GAAGZ,MAAM,CAAC;IAC7BY,SAAS,CAACH,KAAK,CAAC,CAACC,IAAI,CAAC,GAAGG,UAAU,CAACF,GAAG,CAAC;IACxCV,SAAS,CAACW,SAAS,CAAC;EACtB,CAAC;EAED,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrBb,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAEE,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,CAAC,GAAGhB,MAAM,CAACiB,MAAM,GAAG,CAAC;IAC3B,IAAIC,CAAC,GAAGC,KAAK,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IACxB,IAAIC,KAAK,GAAGF,KAAK,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IAC5B,IAAIE,CAAC,GAAGH,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IAC5B,IAAIG,EAAE,GAAGJ,KAAK,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IACzB,IAAII,CAAC,GAAGL,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IAC5B,IAAIK,CAAC,GAAGN,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IAC5B,IAAIM,CAAC,GAAGP,KAAK,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IACxB,IAAIO,CAAC,GAAGR,KAAK,CAACH,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IACxB,IAAIQ,CAAC,GAAG5B,MAAM,CAAC6B,GAAG,CAACC,KAAK,IAAIA,KAAK,CAAC3B,CAAC,CAAC;IAEpC,KAAK,IAAI4B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,CAAC,EAAEe,CAAC,EAAE,EAAE;MAC1Bb,CAAC,CAACa,CAAC,CAAC,GAAG/B,MAAM,CAAC+B,CAAC,GAAG,CAAC,CAAC,CAAC7B,CAAC,GAAGF,MAAM,CAAC+B,CAAC,CAAC,CAAC7B,CAAC;MACpCmB,KAAK,CAACU,CAAC,CAAC,GAAI,CAAC,GAAGb,CAAC,CAACa,CAAC,CAAC,IAAK/B,MAAM,CAAC+B,CAAC,GAAG,CAAC,CAAC,CAAC5B,CAAC,GAAGH,MAAM,CAAC+B,CAAC,CAAC,CAAC5B,CAAC,CAAC,GAAI,CAAC,GAAGe,CAAC,CAACa,CAAC,GAAG,CAAC,CAAC,IAAK/B,MAAM,CAAC+B,CAAC,CAAC,CAAC5B,CAAC,GAAGH,MAAM,CAAC+B,CAAC,GAAG,CAAC,CAAC,CAAC5B,CAAC,CAAC;IAC5G;IAEAmB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACRC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;IACTC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IAER,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,CAAC,EAAEe,CAAC,EAAE,EAAE;MAC1BT,CAAC,CAACS,CAAC,CAAC,GAAG,CAAC,IAAI/B,MAAM,CAAC+B,CAAC,GAAG,CAAC,CAAC,CAAC7B,CAAC,GAAGF,MAAM,CAAC+B,CAAC,GAAG,CAAC,CAAC,CAAC7B,CAAC,CAAC,GAAGgB,CAAC,CAACa,CAAC,GAAG,CAAC,CAAC,GAAGR,EAAE,CAACQ,CAAC,GAAG,CAAC,CAAC;MACrER,EAAE,CAACQ,CAAC,CAAC,GAAGb,CAAC,CAACa,CAAC,CAAC,GAAGT,CAAC,CAACS,CAAC,CAAC;MACnBP,CAAC,CAACO,CAAC,CAAC,GAAG,CAACV,KAAK,CAACU,CAAC,CAAC,GAAGb,CAAC,CAACa,CAAC,GAAG,CAAC,CAAC,GAAGP,CAAC,CAACO,CAAC,GAAG,CAAC,CAAC,IAAIT,CAAC,CAACS,CAAC,CAAC;IAChD;IAEAT,CAAC,CAACN,CAAC,CAAC,GAAG,CAAC;IACRQ,CAAC,CAACR,CAAC,CAAC,GAAG,CAAC;IACRS,CAAC,CAACT,CAAC,CAAC,GAAG,CAAC;IAER,KAAK,IAAIgB,CAAC,GAAGhB,CAAC,GAAG,CAAC,EAAEgB,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/BP,CAAC,CAACO,CAAC,CAAC,GAAGR,CAAC,CAACQ,CAAC,CAAC,GAAGT,EAAE,CAACS,CAAC,CAAC,GAAGP,CAAC,CAACO,CAAC,GAAG,CAAC,CAAC;MAC9BN,CAAC,CAACM,CAAC,CAAC,GAAG,CAAChC,MAAM,CAACgC,CAAC,GAAG,CAAC,CAAC,CAAC7B,CAAC,GAAGH,MAAM,CAACgC,CAAC,CAAC,CAAC7B,CAAC,IAAIe,CAAC,CAACc,CAAC,CAAC,GAAGd,CAAC,CAACc,CAAC,CAAC,IAAIP,CAAC,CAACO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGP,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC;MAChFL,CAAC,CAACK,CAAC,CAAC,GAAG,CAACP,CAAC,CAACO,CAAC,GAAG,CAAC,CAAC,GAAGP,CAAC,CAACO,CAAC,CAAC,KAAK,CAAC,GAAGd,CAAC,CAACc,CAAC,CAAC,CAAC;IACvC;IAEA,MAAMC,eAAe,GAAI/B,CAAC,IAAK;MAC7B,KAAK,IAAI6B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,CAAC,EAAEe,CAAC,EAAE,EAAE;QAC1B,IAAI7B,CAAC,IAAIF,MAAM,CAAC+B,CAAC,CAAC,CAAC7B,CAAC,IAAIA,CAAC,IAAIF,MAAM,CAAC+B,CAAC,GAAG,CAAC,CAAC,CAAC7B,CAAC,EAAE;UAC5C,IAAIgC,MAAM,GAAGhC,CAAC,GAAGF,MAAM,CAAC+B,CAAC,CAAC,CAAC7B,CAAC;UAC5B,OAAO0B,CAAC,CAACG,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC,GAAGG,MAAM,GAAGT,CAAC,CAACM,CAAC,CAAC,GAAGG,MAAM,IAAI,CAAC,GAAGP,CAAC,CAACI,CAAC,CAAC,GAAGG,MAAM,IAAI,CAAC;QACvE;MACF;MACA,OAAO,IAAI;IACb,CAAC;IAED3B,oBAAoB,CAAC0B,eAAe,CAAC7B,KAAK,CAAC,CAAC;EAC9C,CAAC;EAED,MAAM+B,SAAS,GAAGnC,MAAM,CAAC6B,GAAG,CAAEC,KAAK,KAAM;IAAE5B,CAAC,EAAE4B,KAAK,CAAC5B,CAAC;IAAEC,CAAC,EAAE2B,KAAK,CAAC3B;EAAE,CAAC,CAAC,CAAC;EAErE,oBACEb,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBrD,KAAA,CAAA8C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACErD,KAAA,CAAA8C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4BAA8B,CAAC,eAEnCrD,KAAA,CAAA8C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,EACpB3C,MAAM,CAAC6B,GAAG,CAAC,CAACC,KAAK,EAAErB,KAAK,kBACvBnB,KAAA,CAAA8C,aAAA;IAAKQ,GAAG,EAAEnC,KAAM;IAACoC,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3CrD,KAAA,CAAA8C,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbC,WAAW,EAAC,GAAG;IACf5C,KAAK,EAAE0B,KAAK,CAAC5B,CAAE;IACf+C,QAAQ,EAAGC,CAAC,IAAK1C,iBAAiB,CAACC,KAAK,EAAE,GAAG,EAAEyC,CAAC,CAACC,MAAM,CAAC/C,KAAK,CAAE;IAC/DyC,KAAK,EAAE;MAAEO,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtC,CAAC,eACFrD,KAAA,CAAA8C,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbC,WAAW,EAAC,GAAG;IACf5C,KAAK,EAAE0B,KAAK,CAAC3B,CAAE;IACf8C,QAAQ,EAAGC,CAAC,IAAK1C,iBAAiB,CAACC,KAAK,EAAE,GAAG,EAAEyC,CAAC,CAACC,MAAM,CAAC/C,KAAK,CAAE;IAC/DyC,KAAK,EAAE;MAAEO,KAAK,EAAE;IAAG,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACtB,CACE,CACN,CAAC,eACFrD,KAAA,CAAA8C,aAAA;IAAQC,SAAS,EAAC,mBAAmB;IAACiB,OAAO,EAAExC,QAAS;IAAAwB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAEjD,CAAC,eAETrD,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBrD,KAAA,CAAA8C,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbC,WAAW,EAAC,sBAAsB;IAClC5C,KAAK,EAAEA,KAAM;IACb6C,QAAQ,EAAGC,CAAC,IAAK7C,QAAQ,CAACQ,UAAU,CAACqC,CAAC,CAACC,MAAM,CAAC/C,KAAK,CAAC,CAAE;IACtDyC,KAAK,EAAE;MAAEO,KAAK,EAAE;IAAI,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvB,CACE,CAAC,eAENrD,KAAA,CAAA8C,aAAA;IAAQC,SAAS,EAAC,sBAAsB;IAACiB,OAAO,EAAEvC,oBAAqB;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,WAEhE,CAAC,EAERrC,iBAAiB,KAAK,IAAI,iBACzBhB,KAAA,CAAA8C,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBrD,KAAA,CAAA8C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,wBAAsB,EAACvC,KAAK,EAAC,IAAE,EAACE,iBAAiB,CAACiD,OAAO,CAAC,CAAC,CAAM,CAClE,CACN,eAEDjE,KAAA,CAAA8C,aAAA,CAAC5C,SAAS;IAAC4D,KAAK,EAAE,GAAI;IAACI,MAAM,EAAE,GAAI;IAACC,IAAI,EAAEtB,SAAU;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClDrD,KAAA,CAAA8C,aAAA,CAACxC,aAAa;IAAC8D,eAAe,EAAC,KAAK;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvCrD,KAAA,CAAA8C,aAAA,CAAC1C,KAAK;IAACiE,OAAO,EAAC,GAAG;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACrBrD,KAAA,CAAA8C,aAAA,CAACzC,KAAK;IAAA2C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACTrD,KAAA,CAAA8C,aAAA,CAACvC,OAAO;IAAAyC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACXrD,KAAA,CAAA8C,aAAA,CAACtC,MAAM;IAAAwC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACVrD,KAAA,CAAA8C,aAAA,CAAC3C,IAAI;IAACsD,IAAI,EAAC,UAAU;IAACY,OAAO,EAAC,GAAG;IAACC,MAAM,EAAC,SAAS;IAACC,SAAS,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChE,CACL,CACL,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}