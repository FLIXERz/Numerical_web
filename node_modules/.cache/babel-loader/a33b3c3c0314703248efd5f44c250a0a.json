{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azul\\\\homework\\\\Numerical\\\\1\\\\PJ\\\\src\\\\Components_Inter\\\\Form_LagrangeInterpolation.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default function Form_LagrangeInterpolation() {\n  const [points, setPoints] = useState([{\n    x: 0,\n    y: 0\n  }]);\n  const [value, setValue] = useState(0);\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\n  const handlePointChange = (index, axis, val) => {\n    const newPoints = [...points];\n    newPoints[index][axis] = parseFloat(val);\n    setPoints(newPoints);\n  };\n  const addPoint = () => {\n    setPoints([...points, {\n      x: 0,\n      y: 0\n    }]);\n  };\n  const calculateLagrangeInterpolation = () => {\n    let result = 0;\n    const n = points.length;\n    for (let i = 0; i < n; i++) {\n      let term = points[i].y;\n      for (let j = 0; j < n; j++) {\n        if (j !== i) {\n          term *= (value - points[j].x) / (points[i].x - points[j].x);\n        }\n      }\n      result += term;\n    }\n    setInterpolatedValue(result);\n  };\n  const chartData = points.map(point => ({\n    x: point.x,\n    y: point.y\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Linear/Quada\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Input Points\"), points.map((point, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"x\",\n    value: point.x,\n    onChange: e => handlePointChange(index, 'x', e.target.value),\n    style: {\n      width: 60,\n      marginRight: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"y\",\n    value: point.y,\n    onChange: e => handlePointChange(index, 'y', e.target.value),\n    style: {\n      width: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary\",\n    onClick: addPoint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Add Point\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Value to Interpolate\",\n    value: value,\n    onChange: e => setValue(parseFloat(e.target.value)),\n    style: {\n      width: 160\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mt-3\",\n    onClick: calculateLagrangeInterpolation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Calculate\"), interpolatedValue !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Interpolated Value at \", value, \": \", interpolatedValue.toFixed(4))), /*#__PURE__*/React.createElement(LineChart, {\n    width: 450,\n    height: 300,\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"y\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Form_LagrangeInterpolation","points","setPoints","x","y","value","setValue","interpolatedValue","setInterpolatedValue","handlePointChange","index","axis","val","newPoints","parseFloat","addPoint","calculateLagrangeInterpolation","result","n","length","i","term","j","chartData","map","point","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","style","marginBottom","type","placeholder","onChange","e","target","width","marginRight","onClick","toFixed","height","data","strokeDasharray","dataKey","stroke","activeDot","r"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components_Inter/Form_LagrangeInterpolation.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nexport default function Form_LagrangeInterpolation() {\r\n  const [points, setPoints] = useState([{ x: 0, y: 0 }]);\r\n  const [value, setValue] = useState(0);\r\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\r\n\r\n  const handlePointChange = (index, axis, val) => {\r\n    const newPoints = [...points];\r\n    newPoints[index][axis] = parseFloat(val);\r\n    setPoints(newPoints);\r\n  };\r\n\r\n  const addPoint = () => {\r\n    setPoints([...points, { x: 0, y: 0 }]);\r\n  };\r\n\r\n  const calculateLagrangeInterpolation = () => {\r\n    let result = 0;\r\n    const n = points.length;\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      let term = points[i].y;\r\n      for (let j = 0; j < n; j++) {\r\n        if (j !== i) {\r\n          term *= (value - points[j].x) / (points[i].x - points[j].x);\r\n        }\r\n      }\r\n      result += term;\r\n    }\r\n\r\n    setInterpolatedValue(result);\r\n  };\r\n\r\n  const chartData = points.map((point) => ({ x: point.x, y: point.y }));\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <center>\r\n        <h2>Linear/Quada</h2>\r\n\r\n        <h3>Input Points</h3>\r\n        {points.map((point, index) => (\r\n          <div key={index} style={{ marginBottom: 10 }}>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"x\"\r\n              value={point.x}\r\n              onChange={(e) => handlePointChange(index, 'x', e.target.value)}\r\n              style={{ width: 60, marginRight: 5 }}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"y\"\r\n              value={point.y}\r\n              onChange={(e) => handlePointChange(index, 'y', e.target.value)}\r\n              style={{ width: 60 }}\r\n            />\r\n          </div>\r\n        ))}\r\n        <button className=\"btn btn-secondary\" onClick={addPoint}>\r\n          Add Point\r\n        </button>\r\n\r\n        <div className=\"mt-3\">\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Value to Interpolate\"\r\n            value={value}\r\n            onChange={(e) => setValue(parseFloat(e.target.value))}\r\n            style={{ width: 160 }}\r\n          />\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary mt-3\" onClick={calculateLagrangeInterpolation}>\r\n          Calculate\r\n        </button>\r\n\r\n        {interpolatedValue !== null && (\r\n          <div className=\"mt-4\">\r\n            <h4>Interpolated Value at {value}: {interpolatedValue.toFixed(4)}</h4>\r\n          </div>\r\n        )}\r\n\r\n        <LineChart width={450} height={300} data={chartData}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"x\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        </LineChart>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}