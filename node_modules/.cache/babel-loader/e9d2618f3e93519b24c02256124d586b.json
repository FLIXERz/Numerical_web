{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azul\\\\homework\\\\Numerical\\\\1\\\\PJ\\\\src\\\\Components_regression\\\\Form_PolynomialRegression.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { findsum, findregression } from '../Input_regression/TestNewtonreg';\nexport default function Form_PolynomialRegression() {\n  const [xValues, setXValues] = useState(Array(5).fill(0));\n  const [yValues, setYValues] = useState(Array(5).fill(0));\n  const [value, setValue] = useState(0);\n  const [regressionResult, setRegressionResult] = useState(null);\n  const [formula, setFormula] = useState(\"\");\n  const calculatePolynomialRegression = () => {\n    const sumArray = findsum(xValues, yValues); // คำนวณค่าต่างๆ ด้วย findsum\n    const regressionCoeff = findregression(sumArray); // คำนวณค่าสัมประสิทธิ์ด้วย findregression\n\n    // ฟังก์ชันเชิงเส้นรูปแบบ y = ax + b\n    const a = regressionCoeff[0];\n    const b = regressionCoeff[1];\n    const result = a * value + b;\n    setRegressionResult(result);\n    setFormula(`y = ${a.toFixed(2)}x + ${b.toFixed(2)}`);\n  };\n  const chartData = xValues.map((x, index) => ({\n    x: x,\n    y: yValues[index]\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Polynomial Regression\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"X Values\"), xValues.map((x, index) => /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    key: `x${index}`,\n    value: x,\n    onChange: e => {\n      const newXValues = [...xValues];\n      newXValues[index] = parseFloat(e.target.value);\n      setXValues(newXValues);\n    },\n    placeholder: `X${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Y Values\"), yValues.map((y, index) => /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    key: `y${index}`,\n    value: y,\n    onChange: e => {\n      const newYValues = [...yValues];\n      newYValues[index] = parseFloat(e.target.value);\n      setYValues(newYValues);\n    },\n    placeholder: `Y${index + 1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: value,\n    onChange: e => setValue(parseFloat(e.target.value)),\n    placeholder: \"Value to interpolate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: calculatePolynomialRegression,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Calculate Polynomial Regression\")), regressionResult !== null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Interpolated Value: \", regressionResult), /*#__PURE__*/React.createElement(ScatterChart, {\n    width: 450,\n    height: 300,\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"x\",\n    label: {\n      value: \"X\",\n      position: \"insideBottomRight\",\n      offset: -10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    label: {\n      value: \"Y\",\n      angle: -90,\n      position: \"insideLeft\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Scatter, {\n    name: \"Data Points\",\n    data: chartData,\n    fill: \"#8884d8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Formula: \", formula));\n}","map":{"version":3,"names":["React","useState","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","findsum","findregression","Form_PolynomialRegression","xValues","setXValues","Array","fill","yValues","setYValues","value","setValue","regressionResult","setRegressionResult","formula","setFormula","calculatePolynomialRegression","sumArray","regressionCoeff","a","b","result","toFixed","chartData","map","x","index","y","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","type","key","onChange","e","newXValues","parseFloat","target","placeholder","newYValues","onClick","width","height","data","strokeDasharray","dataKey","label","position","offset","angle","name"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components_regression/Form_PolynomialRegression.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from \"react\";\r\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { findsum, findregression } from '../Input_regression/TestNewtonreg';\r\n\r\nexport default function Form_PolynomialRegression() {\r\n  const [xValues, setXValues] = useState(Array(5).fill(0));\r\n  const [yValues, setYValues] = useState(Array(5).fill(0));\r\n  const [value, setValue] = useState(0);\r\n  const [regressionResult, setRegressionResult] = useState(null);\r\n  const [formula, setFormula] = useState(\"\");\r\n\r\n  const calculatePolynomialRegression = () => {\r\n    const sumArray = findsum(xValues, yValues); // คำนวณค่าต่างๆ ด้วย findsum\r\n    const regressionCoeff = findregression(sumArray); // คำนวณค่าสัมประสิทธิ์ด้วย findregression\r\n    \r\n    // ฟังก์ชันเชิงเส้นรูปแบบ y = ax + b\r\n    const a = regressionCoeff[0];\r\n    const b = regressionCoeff[1];\r\n    \r\n    const result = a * value + b;\r\n    setRegressionResult(result);\r\n    setFormula(`y = ${a.toFixed(2)}x + ${b.toFixed(2)}`);\r\n  };\r\n\r\n  const chartData = xValues.map((x, index) => ({ x: x, y: yValues[index] }));\r\n\r\n  return (\r\n    <div>\r\n      <h3>Polynomial Regression</h3>\r\n      \r\n      <div className=\"mb-3\">\r\n        <label>X Values</label>\r\n        {xValues.map((x, index) => (\r\n          <input\r\n            type=\"number\"\r\n            key={`x${index}`}\r\n            value={x}\r\n            onChange={(e) => {\r\n              const newXValues = [...xValues];\r\n              newXValues[index] = parseFloat(e.target.value);\r\n              setXValues(newXValues);\r\n            }}\r\n            placeholder={`X${index + 1}`}\r\n          />\r\n        ))}\r\n      </div>\r\n      \r\n      <div className=\"mb-3\">\r\n        <label>Y Values</label>\r\n        {yValues.map((y, index) => (\r\n          <input\r\n            type=\"number\"\r\n            key={`y${index}`}\r\n            value={y}\r\n            onChange={(e) => {\r\n              const newYValues = [...yValues];\r\n              newYValues[index] = parseFloat(e.target.value);\r\n              setYValues(newYValues);\r\n            }}\r\n            placeholder={`Y${index + 1}`}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <input\r\n          type=\"number\"\r\n          value={value}\r\n          onChange={(e) => setValue(parseFloat(e.target.value))}\r\n          placeholder=\"Value to interpolate\"\r\n        />\r\n        <button onClick={calculatePolynomialRegression}>Calculate Polynomial Regression</button>\r\n      </div>\r\n\r\n      {regressionResult !== null && (\r\n        <p>Interpolated Value: {regressionResult}</p>\r\n      )}\r\n\r\n      <ScatterChart width={450} height={300} data={chartData}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"x\" label={{ value: \"X\", position: \"insideBottomRight\", offset: -10 }} />\r\n        <YAxis label={{ value: \"Y\", angle: -90, position: \"insideLeft\" }} />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Scatter name=\"Data Points\" data={chartData} fill=\"#8884d8\" />\r\n      </ScatterChart>\r\n\r\n      <p>Formula: {formula}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}