{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azul\\\\homework\\\\Numerical\\\\1\\\\PJ\\\\src\\\\Components_Inter\\\\Form_SplineQuadratic.js\";\nimport React, { useState } from \"react\";\nimport Input3x3 from \"../Input_Spline/Input3x3\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default function Form_SplineQuadratic() {\n  const [matrix, setMatrix] = useState([]);\n  const [value, setValue] = useState(0);\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\n  const calculateQuadraticSpline = () => {\n    let result = null;\n    // Placeholder for Quadratic Spline calculation logic\n    result = \"Calculated Value for Quadratic Spline (Placeholder)\";\n    setInterpolatedValue(result);\n  };\n\n  // ใช้ข้อมูลจาก matrix สำหรับสร้าง chartData เพื่อแสดงบนกราฟ\n  const chartData = matrix.map((point, index) => ({\n    x: point[0],\n    y: point[2]\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Quadratic Spline Interpolation\"), /*#__PURE__*/React.createElement(Input3x3, {\n    setMatrix: setMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: value,\n    onChange: e => setValue(parseFloat(e.target.value)),\n    placeholder: \"Value to interpolate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: calculateQuadraticSpline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Calculate Quadratic Spline\")), interpolatedValue !== null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }\n  }, \"Interpolated Value: \", interpolatedValue), /*#__PURE__*/React.createElement(LineChart, {\n    width: 450,\n    height: 300,\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"y\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","Input3x3","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Form_SplineQuadratic","matrix","setMatrix","value","setValue","interpolatedValue","setInterpolatedValue","calculateQuadraticSpline","result","chartData","map","point","index","x","y","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","parseFloat","target","placeholder","onClick","width","height","data","strokeDasharray","dataKey","stroke","activeDot","r"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components_Inter/Form_SplineQuadratic.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Input3x3 from \"../Input_Spline/Input3x3\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nexport default function Form_SplineQuadratic() {\r\n  const [matrix, setMatrix] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\r\n\r\n  const calculateQuadraticSpline = () => {\r\n    let result = null;\r\n    // Placeholder for Quadratic Spline calculation logic\r\n    result = \"Calculated Value for Quadratic Spline (Placeholder)\";\r\n    setInterpolatedValue(result);\r\n  };\r\n\r\n  // ใช้ข้อมูลจาก matrix สำหรับสร้าง chartData เพื่อแสดงบนกราฟ\r\n  const chartData = matrix.map((point, index) => ({\r\n    x: point[0],\r\n    y: point[2],\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <h3>Quadratic Spline Interpolation</h3>\r\n      <Input3x3 setMatrix={setMatrix} />\r\n\r\n      <div>\r\n        <input\r\n          type=\"number\"\r\n          value={value}\r\n          onChange={(e) => setValue(parseFloat(e.target.value))}\r\n          placeholder=\"Value to interpolate\"\r\n        />\r\n        <button onClick={calculateQuadraticSpline}>Calculate Quadratic Spline</button>\r\n      </div>\r\n\r\n      {interpolatedValue !== null && <p>Interpolated Value: {interpolatedValue}</p>}\r\n\r\n      {/* แสดงผลกราฟ */}\r\n      <LineChart width={450} height={300} data={chartData}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"x\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAExF,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMgB,wBAAwB,GAAGA,CAAA,KAAM;IACrC,IAAIC,MAAM,GAAG,IAAI;IACjB;IACAA,MAAM,GAAG,qDAAqD;IAC9DF,oBAAoB,CAACE,MAAM,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;IAC9CC,CAAC,EAAEF,KAAK,CAAC,CAAC,CAAC;IACXG,CAAC,EAAEH,KAAK,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC;EAEH,oBACErB,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/B,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gCAAkC,CAAC,eACvC/B,KAAA,CAAAyB,aAAA,CAACvB,QAAQ;IAACU,SAAS,EAAEA,SAAU;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAElC/B,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/B,KAAA,CAAAyB,aAAA;IACEO,IAAI,EAAC,QAAQ;IACbnB,KAAK,EAAEA,KAAM;IACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACqB,UAAU,CAACD,CAAC,CAACE,MAAM,CAACvB,KAAK,CAAC,CAAE;IACtDwB,WAAW,EAAC,sBAAsB;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnC,CAAC,eACF/B,KAAA,CAAAyB,aAAA;IAAQa,OAAO,EAAErB,wBAAyB;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,4BAAkC,CAC1E,CAAC,EAELhB,iBAAiB,KAAK,IAAI,iBAAIf,KAAA,CAAAyB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,sBAAoB,EAAChB,iBAAqB,CAAC,eAG7Ef,KAAA,CAAAyB,aAAA,CAACtB,SAAS;IAACoC,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,GAAI;IAACC,IAAI,EAAEtB,SAAU;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClD/B,KAAA,CAAAyB,aAAA,CAAClB,aAAa;IAACmC,eAAe,EAAC,KAAK;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvC/B,KAAA,CAAAyB,aAAA,CAACpB,KAAK;IAACsC,OAAO,EAAC,GAAG;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACrB/B,KAAA,CAAAyB,aAAA,CAACnB,KAAK;IAAAoB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACT/B,KAAA,CAAAyB,aAAA,CAACjB,OAAO;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACX/B,KAAA,CAAAyB,aAAA,CAAChB,MAAM;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACV/B,KAAA,CAAAyB,aAAA,CAACrB,IAAI;IAAC4B,IAAI,EAAC,UAAU;IAACW,OAAO,EAAC,GAAG;IAACC,MAAM,EAAC,SAAS;IAACC,SAAS,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChE,CACR,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}