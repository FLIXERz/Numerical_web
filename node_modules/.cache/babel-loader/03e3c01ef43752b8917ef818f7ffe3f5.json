{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azul\\\\homework\\\\Numerical\\\\1\\\\PJ\\\\src\\\\Components_Inter\\\\Form_SplineCubic.js\";\nimport React, { useState } from \"react\";\nimport Input4x4 from \"../Input_spline/Input4x4\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default function Form_SplineCubic() {\n  const [matrix, setMatrix] = useState([]);\n  const [value, setValue] = useState(0);\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\n  const calculateCubicSpline = () => {\n    let result = null;\n    result = \"Calculated Value for Cubic Spline (Placeholder)\";\n    setInterpolatedValue(result);\n  };\n  const chartData = matrix.map(point => ({\n    x: point[0],\n    // ดึงค่า x จาก matrix\n    y: point[4] // ดึงค่า y จาก matrix\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Cubic Spline Interpolation\"), /*#__PURE__*/React.createElement(Input4x4, {\n    setMatrix: setMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: value,\n    onChange: e => setValue(parseFloat(e.target.value)),\n    placeholder: \"Value to interpolate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: calculateCubicSpline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Calculate Cubic Spline\")), interpolatedValue !== null && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }\n  }, \"Interpolated Value: \", interpolatedValue), /*#__PURE__*/React.createElement(LineChart, {\n    width: 450,\n    height: 300,\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"x\",\n    label: {\n      value: \"X\",\n      position: \"insideBottomRight\",\n      offset: -10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    label: {\n      value: \"Y\",\n      angle: -90,\n      position: \"insideLeft\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"y\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","Input4x4","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Form_SplineCubic","matrix","setMatrix","value","setValue","interpolatedValue","setInterpolatedValue","calculateCubicSpline","result","chartData","map","point","x","y","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","parseFloat","target","placeholder","onClick","width","height","data","strokeDasharray","dataKey","label","position","offset","angle","stroke","activeDot","r"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components_Inter/Form_SplineCubic.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Input4x4 from \"../Input_spline/Input4x4\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nexport default function Form_SplineCubic() {\r\n  const [matrix, setMatrix] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\r\n\r\n  const calculateCubicSpline = () => {\r\n    let result = null;\r\n    result = \"Calculated Value for Cubic Spline (Placeholder)\";\r\n    setInterpolatedValue(result);\r\n  };\r\n\r\n  const chartData = matrix.map((point) => ({\r\n    x: point[0], // ดึงค่า x จาก matrix\r\n    y: point[4], // ดึงค่า y จาก matrix\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <h3>Cubic Spline Interpolation</h3>\r\n      <Input4x4 setMatrix={setMatrix} />\r\n\r\n      <div>\r\n        <input\r\n          type=\"number\"\r\n          value={value}\r\n          onChange={(e) => setValue(parseFloat(e.target.value))}\r\n          placeholder=\"Value to interpolate\"\r\n        />\r\n        <button onClick={calculateCubicSpline}>Calculate Cubic Spline</button>\r\n      </div>\r\n\r\n      {interpolatedValue !== null && <p>Interpolated Value: {interpolatedValue}</p>}\r\n\r\n      <LineChart width={450} height={300} data={chartData}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"x\" label={{ value: \"X\", position: \"insideBottomRight\", offset: -10 }} />\r\n        <YAxis label={{ value: \"Y\", angle: -90, position: \"insideLeft\" }} />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n      </LineChart>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}