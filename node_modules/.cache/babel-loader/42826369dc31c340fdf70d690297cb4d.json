{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azul\\\\homework\\\\Numerical\\\\1\\\\PJ\\\\src\\\\Components_Linear\\\\Form_CholeskyDecomposition.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nexport default function Form_CholeskyDecomposition() {\n  const [matrixSize, setMatrixSize] = useState(2);\n  const [matrix, setMatrix] = useState([]);\n  const [L, setL] = useState([]);\n  const handleMatrixSizeChange = e => {\n    const size = parseInt(e.target.value);\n    setMatrixSize(size);\n    setMatrix(Array(size).fill().map(() => Array(size).fill(0)));\n  };\n  const handleInputChange = (e, row, col) => {\n    const newMatrix = [...matrix];\n    newMatrix[row][col] = parseFloat(e.target.value);\n    setMatrix(newMatrix);\n  };\n  const calculateCholesky = () => {\n    const n = matrixSize;\n    let L = Array(n).fill().map(() => Array(n).fill(0));\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j <= i; j++) {\n        let sum = 0;\n        if (i === j) {\n          // Diagonal elements\n          for (let k = 0; k < j; k++) sum += Math.pow(L[j][k], 2);\n          L[j][j] = Math.sqrt(matrix[j][j] - sum);\n        } else {\n          for (let k = 0; k < j; k++) sum += L[i][k] * L[j][k];\n          L[i][j] = (matrix[i][j] - sum) / L[j][j];\n        }\n      }\n    }\n    setL(L);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Cholesky Decomposition\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Select Matrix Size:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-select form-select-lg mb-3 w-25\",\n    value: matrixSize,\n    onChange: handleMatrixSizeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"2x2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"3x3\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"4x4\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"5x5\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Input Matrix\"), matrix.map((row, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, row.map((value, j) => /*#__PURE__*/React.createElement(\"input\", {\n    key: j,\n    type: \"number\",\n    value: matrix[i][j],\n    onChange: e => handleInputChange(e, i, j),\n    style: {\n      width: 50,\n      margin: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mt-3\",\n    onClick: calculateCholesky,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Calculate Cholesky Decomposition\"), L.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Lower Triangular Matrix (L):\"), L.map((row, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, row.map((value, j) => /*#__PURE__*/React.createElement(\"span\", {\n    key: j,\n    style: {\n      width: 50,\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, value.toFixed(2))))))));\n}","map":{"version":3,"names":["React","useState","Form_CholeskyDecomposition","matrixSize","setMatrixSize","matrix","setMatrix","L","setL","handleMatrixSizeChange","e","size","parseInt","target","value","Array","fill","map","handleInputChange","row","col","newMatrix","parseFloat","calculateCholesky","n","i","j","sum","k","Math","pow","sqrt","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","key","type","style","width","margin","onClick","length","display","toFixed"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components_Linear/Form_CholeskyDecomposition.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function Form_CholeskyDecomposition() {\r\n  const [matrixSize, setMatrixSize] = useState(2);\r\n  const [matrix, setMatrix] = useState([]);\r\n  const [L, setL] = useState([]);\r\n\r\n  const handleMatrixSizeChange = (e) => {\r\n    const size = parseInt(e.target.value);\r\n    setMatrixSize(size);\r\n    setMatrix(Array(size).fill().map(() => Array(size).fill(0)));\r\n  };\r\n\r\n  const handleInputChange = (e, row, col) => {\r\n    const newMatrix = [...matrix];\r\n    newMatrix[row][col] = parseFloat(e.target.value);\r\n    setMatrix(newMatrix);\r\n  };\r\n\r\n  const calculateCholesky = () => {\r\n    const n = matrixSize;\r\n    let L = Array(n).fill().map(() => Array(n).fill(0));\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      for (let j = 0; j <= i; j++) {\r\n        let sum = 0;\r\n\r\n        if (i === j) { // Diagonal elements\r\n          for (let k = 0; k < j; k++) sum += Math.pow(L[j][k], 2);\r\n          L[j][j] = Math.sqrt(matrix[j][j] - sum);\r\n        } else {\r\n          for (let k = 0; k < j; k++) sum += L[i][k] * L[j][k];\r\n          L[i][j] = (matrix[i][j] - sum) / L[j][j];\r\n        }\r\n      }\r\n    }\r\n\r\n    setL(L);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <center>\r\n        <h2>Cholesky Decomposition</h2>\r\n        <label>Select Matrix Size:</label>\r\n        <select\r\n          className=\"form-select form-select-lg mb-3 w-25\"\r\n          value={matrixSize}\r\n          onChange={handleMatrixSizeChange}\r\n        >\r\n          <option value=\"2\">2x2</option>\r\n          <option value=\"3\">3x3</option>\r\n          <option value=\"4\">4x4</option>\r\n          <option value=\"5\">5x5</option>\r\n        </select>\r\n\r\n        <div>\r\n          <h3>Input Matrix</h3>\r\n          {matrix.map((row, i) =>\r\n            <div key={i}>\r\n              {row.map((value, j) => \r\n                <input\r\n                  key={j}\r\n                  type=\"number\"\r\n                  value={matrix[i][j]}\r\n                  onChange={(e) => handleInputChange(e, i, j)}\r\n                  style={{ width: 50, margin: 5 }}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary mt-3\" onClick={calculateCholesky}>\r\n          Calculate Cholesky Decomposition\r\n        </button>\r\n\r\n        {L.length > 0 && (\r\n          <div className=\"mt-4\">\r\n            <h3>Lower Triangular Matrix (L):</h3>\r\n            {L.map((row, i) => (\r\n              <div key={i}>\r\n                {row.map((value, j) => (\r\n                  <span key={j} style={{ width: 50, display: 'inline-block' }}>{value.toFixed(2)}</span>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}