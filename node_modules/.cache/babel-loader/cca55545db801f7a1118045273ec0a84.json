{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Azul\\\\homework\\\\Numerical\\\\1\\\\PJ\\\\src\\\\Components_Inter\\\\Form_SplineLinear.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from \"react\";\nimport Input2x2 from \"../Input_spline/Input2x2\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport default function Form_SplineLinear() {\n  const [matrix, setMatrix] = useState([]);\n  const [value, setValue] = useState(0);\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\n  const calculateLinearSpline = () => {\n    let result = null;\n    if (matrix.length === 2) {\n      const [x1, x2, y1] = matrix[0];\n      const [x2Next, x3, y2] = matrix[1];\n      if (value >= x1 && value <= x2Next) {\n        const slope = (y2 - y1) / (x2Next - x1);\n        result = y1 + slope * (value - x1);\n      }\n    }\n    setInterpolatedValue(result);\n  };\n  const chartData = matrix.map(point => ({\n    x: point[0],\n    y: point[2]\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-xxl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border rounded-4 bg-light position-absolute top-50 start-50 translate-middle w-75 p-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Linear Spline Interpolation\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center gap-2 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input2x2, {\n    setMatrix: setMatrix,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: value,\n    onChange: e => setValue(parseFloat(e.target.value)),\n    placeholder: \"Value to interpolate\",\n    className: \"form-control mb-3 text-center\",\n    style: {\n      width: \"60px\",\n      height: \"40px\",\n      fontSize: \"18px\",\n      borderRadius: \"8px\",\n      border: \"1px solid #ddd\",\n      boxShadow: \"0 0 4px rgba(0, 0, 0, 0.1)\",\n      margin: \"0 auto\",\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary w-100\",\n    onClick: calculateLinearSpline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Calculate Linear Spline\")), interpolatedValue !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Interpolated Value: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, interpolatedValue))), /*#__PURE__*/React.createElement(LineChart, {\n    width: 500,\n    height: 300,\n    data: chartData,\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"x\",\n    label: {\n      value: \"X\",\n      position: \"insideBottomRight\",\n      offset: -10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    label: {\n      value: \"Y\",\n      angle: -90,\n      position: \"insideLeft\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"y\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","Input2x2","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Form_SplineLinear","matrix","setMatrix","value","setValue","interpolatedValue","setInterpolatedValue","calculateLinearSpline","result","length","x1","x2","y1","x2Next","x3","y2","slope","chartData","map","point","x","y","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","parseFloat","target","placeholder","style","width","height","fontSize","borderRadius","border","boxShadow","margin","display","onClick","data","strokeDasharray","dataKey","label","position","offset","angle","stroke","activeDot","r"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components_Inter/Form_SplineLinear.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState } from \"react\";\r\nimport Input2x2 from \"../Input_spline/Input2x2\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nexport default function Form_SplineLinear() {\r\n  const [matrix, setMatrix] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n  const [interpolatedValue, setInterpolatedValue] = useState(null);\r\n\r\n  const calculateLinearSpline = () => {\r\n    let result = null;\r\n    if (matrix.length === 2) {\r\n      const [x1, x2, y1] = matrix[0];\r\n      const [x2Next, x3, y2] = matrix[1];\r\n      \r\n      if (value >= x1 && value <= x2Next) {\r\n        const slope = (y2 - y1) / (x2Next - x1);\r\n        result = y1 + slope * (value - x1);\r\n      }\r\n    }\r\n    setInterpolatedValue(result);\r\n  };\r\n\r\n  const chartData = matrix.map((point) => ({\r\n    x: point[0],\r\n    y: point[2],\r\n  }));\r\n\r\n  return (\r\n    <div className=\"container-xxl\">\r\n      <div className=\"border rounded-4 bg-light position-absolute top-50 start-50 translate-middle w-75 p-3 shadow\">\r\n        <center><h2>Linear Spline Interpolation</h2></center>\r\n\r\n        {/* กรอบสำหรับการตั้งค่า Matrix */}\r\n        <div className=\"d-flex justify-content-center gap-2 my-3\">\r\n          <Input2x2 setMatrix={setMatrix} />\r\n        </div>\r\n\r\n        {/* ฟิลด์อินพุตสำหรับค่าที่ต้องการหา */}\r\n        <div className=\"my-3\">\r\n          <input\r\n            type=\"number\"\r\n            value={value}\r\n            onChange={(e) => setValue(parseFloat(e.target.value))}\r\n            placeholder=\"Value to interpolate\"\r\n            className=\"form-control mb-3 text-center\"\r\n            style={{\r\n              width: \"60px\",\r\n              height: \"40px\",\r\n              fontSize: \"18px\",\r\n              borderRadius: \"8px\",\r\n              border: \"1px solid #ddd\",\r\n              boxShadow: \"0 0 4px rgba(0, 0, 0, 0.1)\",\r\n              margin: \"0 auto\",\r\n              display: \"block\"\r\n            }}\r\n          />\r\n          <button className=\"btn btn-primary w-100\" onClick={calculateLinearSpline}>\r\n            Calculate Linear Spline\r\n          </button>\r\n        </div>\r\n\r\n        {interpolatedValue !== null && (\r\n          <div className=\"mt-4 text-center\">\r\n            <h4>Interpolated Value: <span className=\"text-primary\">{interpolatedValue}</span></h4>\r\n          </div>\r\n        )}\r\n\r\n        {/* กราฟแสดงผล */}\r\n        <LineChart width={500} height={300} data={chartData} className=\"mx-auto\">\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"x\" label={{ value: \"X\", position: \"insideBottomRight\", offset: -10 }} />\r\n          <YAxis label={{ value: \"Y\", angle: -90, position: \"insideLeft\" }} />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n        </LineChart>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}