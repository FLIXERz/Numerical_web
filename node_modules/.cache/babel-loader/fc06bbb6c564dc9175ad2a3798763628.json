{"ast":null,"code":"import * as math from 'mathjs';\nconst i_arr = [];\nconst a_arr = [];\nconst b_arr = [];\nconst root_arr = [];\nexport default function Secant_method(x1, x2, eq) {\n  let E = 0.0000001;\n  function f(x) {\n    const node2 = math.parse(eq);\n    const code2 = node2.compile();\n    let scope = {\n      x\n    };\n    return code2.evaluate(scope);\n  }\n  function f_x0(x1, x2) {\n    return (x1 * f(x2) - x2 * f(x1)) / (f(x2) - f(x1));\n  }\n  function f_c(x0, x1) {\n    return f(x1) * f(x0);\n  }\n  let n = 0,\n    xm,\n    x0,\n    c;\n  do {\n    a_arr.push(x0);\n    b_arr.push(x1);\n    x0 = f_x0(x1, x2);\n    c = f_c(x0, x1);\n\n    // update the value of interval\n    x1 = x2;\n    x2 = x0;\n\n    // update number of iteration\n    n++;\n    i_arr.push(n);\n    // if x0 is the root of equation then break the loop\n    if (c === 0) break;\n    xm = (x1 * f(x2) - x2 * f(x1)) / (f(x2) - f(x1));\n    root_arr.push(xm);\n  } while (Math.abs(xm - x0) >= E); // repeat the loop\n\n  return xm;\n}\nexport function DataTablesecant(x) {\n  const data = [];\n  const datax = [];\n  for (let i = 0; i < i_arr.length; i++) {\n    datax.push({\n      iter: i_arr[i],\n      x0: a_arr[i],\n      x1: b_arr[i],\n      xm: root_arr[i]\n    });\n  }\n  for (let i = 0; i < i_arr.length; i++) {\n    data.push(datax[i]);\n  }\n  if (x === 1) {\n    // Clear the existing data\n    data.length = 0;\n    datax.length = 0;\n    i_arr.length = 0;\n    a_arr.length = 0;\n    // b_arr.length = 0 ;\n    root_arr.length = 0;\n  }\n  return data;\n  //    return console.log(data) ;\n}\n//Testcase\n// let a=1.5,b=2\n// Bisection_method(a,b);\n// DataTable();","map":{"version":3,"names":["math","i_arr","a_arr","b_arr","root_arr","Secant_method","x1","x2","eq","E","f","x","node2","parse","code2","compile","scope","evaluate","f_x0","f_c","x0","n","xm","c","push","Math","abs","DataTablesecant","data","datax","i","length","iter"],"sources":["C:/Users/Azul/homework/Numerical/1/PJ/src/Components/Testsecant.js"],"sourcesContent":["import * as math from 'mathjs';\r\n\r\nconst i_arr =[]\r\nconst a_arr = []\r\nconst b_arr = []\r\nconst root_arr = [] \r\n\r\nexport default function Secant_method(x1,x2,eq){\r\n    let E = 0.0000001;\r\n    \r\n    function f(x)\r\n        {\r\n            const node2 = math.parse(eq)\r\n            const code2 = node2.compile()\r\n            let scope = {x} \r\n            return  code2.evaluate(scope);\r\n        } \r\n    function f_x0(x1,x2){\r\n        return (x1 * f(x2) - x2 * f(x1)) / (f(x2) - f(x1));\r\n    }\r\n    function f_c(x0,x1){\r\n        return f(x1) * f(x0);\r\n    }\r\n    let n = 0, xm, x0, c;\r\n   \r\n        do {\r\n            a_arr.push(x0);\r\n            b_arr.push(x1);\r\n            x0 = f_x0(x1,x2);\r\n \r\n            c = f_c(x0,x1) ;\r\n \r\n            // update the value of interval\r\n            x1 = x2;\r\n            x2 = x0;\r\n \r\n            // update number of iteration\r\n            n++;\r\n            i_arr.push(n);\r\n            // if x0 is the root of equation then break the loop\r\n            if (c === 0)\r\n                break;\r\n            xm = (x1 * f(x2) - x2 * f(x1)) / (f(x2) - f(x1));\r\n            root_arr.push(xm);\r\n        } while (Math.abs(xm - x0) >= E); // repeat the loop\r\n\r\n    return xm ;\r\n}\r\n\r\nexport function DataTablesecant(x){\r\n    const data =[]\r\n    const datax =[]\r\n    for (let i = 0; i < i_arr.length; i++) {\r\n        datax.push({iter:i_arr[i],x0:a_arr[i],x1:b_arr[i],xm:root_arr[i]});\r\n      }\r\n    for (let i = 0; i < i_arr.length; i++) {\r\n        data.push(datax[i])\r\n    }\r\n\r\n    if(x === 1){\r\n        // Clear the existing data\r\n        data.length = 0;\r\n        datax.length = 0;\r\n        i_arr.length = 0;\r\n        a_arr.length = 0;\r\n        // b_arr.length = 0 ;\r\n        root_arr.length = 0;\r\n    }\r\n\r\n   return data;\r\n//    return console.log(data) ;\r\n}\r\n//Testcase\r\n// let a=1.5,b=2\r\n// Bisection_method(a,b);\r\n// DataTable();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}