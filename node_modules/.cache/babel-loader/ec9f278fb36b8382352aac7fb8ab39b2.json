{"ast":null,"code":"import * as math from 'mathjs';\nexport function findsum(x, y) {\n  let xe = math.evaluate(x);\n  let ye = math.evaluate(y);\n  let sumxy = 0,\n    sumxx = 0,\n    sumyy = 0,\n    sumx = 0,\n    sumy = 0;\n  console.log(xe);\n  for (let i = 0; i < 5; i++) {\n    sumx = sumx + xe[i];\n    console.log(xe[i]);\n    sumy = sumy + ye[i];\n    sumxy = sumxy + xe[i] * ye[i];\n    sumxx = sumxx + xe[i] * xe[i];\n    sumyy = sumyy + ye[i] * ye[i];\n  }\n  let arr = [sumx, sumy, sumxy, sumxx, sumyy];\n  console.log(arr);\n  return arr;\n}\nexport function findregression(arr) {\n  let a = (arr[1] * arr[3] - arr[0] * arr[2]) / (5 * arr[3] - arr[0] * arr[0]);\n  let b = (5 * arr[2] - arr[0] * arr[1]) / (5 * arr[3] - arr[0] * arr[0]);\n  let asx = [a, b];\n  console.log(asx);\n  return asx;\n}","map":{"version":3,"names":["math","findsum","x","y","xe","evaluate","ye","sumxy","sumxx","sumyy","sumx","sumy","console","log","i","arr","findregression","a","b","asx"],"sources":["C:/Users/Azul/homework/Numerical/PJ/src/Input_regression/TestNewtonreg.js"],"sourcesContent":["\r\n\r\nimport * as math from 'mathjs';\r\n  \r\nexport function findsum(x,y){\r\n    let xe = math.evaluate(x);\r\n    let ye =math.evaluate(y);\r\n    let sumxy=0,sumxx=0,sumyy=0,sumx=0,sumy=0 ;\r\n    \r\n    console.log(xe)\r\n    for(let i=0;i<5;i++){\r\n        sumx = (sumx + (xe[i]))\r\n        console.log(xe[i])\r\n        \r\n        sumy = (sumy +(ye[i]))\r\n        sumxy = (sumxy + (xe[i]*ye[i]));\r\n        sumxx = (sumxx + (xe[i]*xe[i]));\r\n        sumyy = (sumyy + (ye[i]*ye[i]));\r\n    }\r\n\r\n    let arr =[sumx,sumy,sumxy,sumxx,sumyy];\r\n    console.log(arr);\r\n    return arr ;\r\n\r\n  }\r\nexport function findregression(arr){\r\n\r\n   let a =  ((arr[1]*arr[3]) - (arr[0]*arr[2]))/((5*arr[3])-(arr[0]*arr[0]));\r\n   let b = ((5*arr[2])-(arr[0]*arr[1]))/((5*arr[3])-(arr[0]*arr[0]));\r\n   let asx =[a,b]\r\n    console.log(asx);\r\n    \r\n    return asx ;\r\n}"],"mappings":"AAEA,OAAO,KAAKA,IAAI,MAAM,QAAQ;AAE9B,OAAO,SAASC,OAAOA,CAACC,CAAC,EAACC,CAAC,EAAC;EACxB,IAAIC,EAAE,GAAGJ,IAAI,CAACK,QAAQ,CAACH,CAAC,CAAC;EACzB,IAAII,EAAE,GAAEN,IAAI,CAACK,QAAQ,CAACF,CAAC,CAAC;EACxB,IAAII,KAAK,GAAC,CAAC;IAACC,KAAK,GAAC,CAAC;IAACC,KAAK,GAAC,CAAC;IAACC,IAAI,GAAC,CAAC;IAACC,IAAI,GAAC,CAAC;EAEzCC,OAAO,CAACC,GAAG,CAACT,EAAE,CAAC;EACf,KAAI,IAAIU,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,CAAC,EAACA,CAAC,EAAE,EAAC;IAChBJ,IAAI,GAAIA,IAAI,GAAIN,EAAE,CAACU,CAAC,CAAG;IACvBF,OAAO,CAACC,GAAG,CAACT,EAAE,CAACU,CAAC,CAAC,CAAC;IAElBH,IAAI,GAAIA,IAAI,GAAGL,EAAE,CAACQ,CAAC,CAAG;IACtBP,KAAK,GAAIA,KAAK,GAAIH,EAAE,CAACU,CAAC,CAAC,GAACR,EAAE,CAACQ,CAAC,CAAG;IAC/BN,KAAK,GAAIA,KAAK,GAAIJ,EAAE,CAACU,CAAC,CAAC,GAACV,EAAE,CAACU,CAAC,CAAG;IAC/BL,KAAK,GAAIA,KAAK,GAAIH,EAAE,CAACQ,CAAC,CAAC,GAACR,EAAE,CAACQ,CAAC,CAAG;EACnC;EAEA,IAAIC,GAAG,GAAE,CAACL,IAAI,EAACC,IAAI,EAACJ,KAAK,EAACC,KAAK,EAACC,KAAK,CAAC;EACtCG,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;EAChB,OAAOA,GAAG;AAEZ;AACF,OAAO,SAASC,cAAcA,CAACD,GAAG,EAAC;EAEhC,IAAIE,CAAC,GAAI,CAAEF,GAAG,CAAC,CAAC,CAAC,GAACA,GAAG,CAAC,CAAC,CAAC,GAAKA,GAAG,CAAC,CAAC,CAAC,GAACA,GAAG,CAAC,CAAC,CAAE,KAAI,CAAC,GAACA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAACA,GAAG,CAAC,CAAC,CAAE,CAAC;EACzE,IAAIG,CAAC,GAAG,CAAE,CAAC,GAACH,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAACA,GAAG,CAAC,CAAC,CAAE,KAAI,CAAC,GAACA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAACA,GAAG,CAAC,CAAC,CAAE,CAAC;EACjE,IAAII,GAAG,GAAE,CAACF,CAAC,EAACC,CAAC,CAAC;EACbN,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;EAEhB,OAAOA,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module"}